{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\College\\\\Projects\\\\3Decent\\\\3Decent\\\\decentragram\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\College\\\\Projects\\\\3Decent\\\\3Decent\\\\decentragram\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"D:\\\\College\\\\Projects\\\\3Decent\\\\3Decent\\\\decentragram\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"D:\\\\College\\\\Projects\\\\3Decent\\\\3Decent\\\\decentragram\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\College\\\\Projects\\\\3Decent\\\\3Decent\\\\decentragram\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"D:\\\\College\\\\Projects\\\\3Decent\\\\3Decent\\\\decentragram\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"D:\\\\College\\\\Projects\\\\3Decent\\\\3Decent\\\\decentragram\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\College\\\\Projects\\\\3Decent\\\\3Decent\\\\decentragram\\\\src\\\\components\\\\App.js\";\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\nimport Identicon from 'identicon.js';\nimport './App.css';\nimport Decentragram from '../abis/Decentragram.json';\nimport Navbar from './Navbar';\nimport Main from './Main';\n\nvar ipfsClient = require('ipfs-http-client');\n\nvar ipfs = ipfsClient({\n  host: 'ipfs.infura.io',\n  port: 5001,\n  protocol: 'https'\n}); // leaving out the arguments will default to these values\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context2.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                _context2.next = 7;\n                break;\n\n              case 6:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\n                }\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var web3, accounts, networkId, networkData, decentragram, imagesCount;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                web3 = window.web3;\n                _context3.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context3.sent;\n                console.log(accounts);\n                this.setState({\n                  account: accounts[0]\n                }); // Network ID\n\n                _context3.next = 8;\n                return web3.eth.net.getId();\n\n              case 8:\n                networkId = _context3.sent;\n                networkData = Decentragram.networks[networkId];\n\n                if (!networkData) {\n                  _context3.next = 20;\n                  break;\n                }\n\n                decentragram = new web3.eth.Contract(Decentragram.abi, networkData.address);\n                this.setState({\n                  decentragram: decentragram\n                });\n                _context3.next = 15;\n                return decentragram.methods.imageCount().call();\n\n              case 15:\n                imagesCount = _context3.sent;\n                this.setState({\n                  imagesCount: imagesCount\n                });\n                this.setState({\n                  loading: false\n                });\n                _context3.next = 21;\n                break;\n\n              case 20:\n                window.alert('Decentragram contract not deployed to detected network.');\n\n              case 21:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.captureFile = function (event) {\n      event.preventDefault();\n      var file = event.target.files[0];\n      var reader = new window.FileReader();\n      reader.readAsArrayBuffer(file);\n\n      reader.onloadend = function () {\n        _this.setState({\n          buffer: Buffer(reader.result)\n        });\n\n        console.log('buffer', _this.state.buffer);\n      };\n    };\n\n    _this.uploadImage = function (description) {\n      console.log(\"Submitting file to ipfs...\"); //adding file to the IPFS\n\n      ipfs.add(_this.state.buffer, function (error, result) {\n        console.log('Ipfs result', result);\n\n        if (error) {\n          console.error(error);\n          return;\n        }\n\n        _this.setState({\n          loading: true\n        });\n\n        _this.state.decentragram.methods.uploadImage(result[0].hash, description).send({\n          from: _this.state.account\n        }).on('transactionHash', function (hash) {\n          _this.setState({\n            loading: false\n          });\n\n          window.alert(\"Successfully uploaded\");\n        });\n      });\n    };\n\n    _this.state = {\n      account: '',\n      decentragram: null,\n      images: [],\n      loading: true\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        account: this.state.account,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }), this.state.loading ? React.createElement(\"div\", {\n        id: \"loader\",\n        className: \"text-center mt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Loading...\")) : React.createElement(Main, {\n        captureFile: this.captureFile,\n        uploadImage: this.uploadImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["D:\\College\\Projects\\3Decent\\3Decent\\decentragram\\src\\components\\App.js"],"names":["React","Component","Web3","Identicon","Decentragram","Navbar","Main","ipfsClient","require","ipfs","host","port","protocol","App","loadWeb3","loadBlockchainData","window","ethereum","web3","enable","currentProvider","alert","eth","getAccounts","accounts","console","log","setState","account","net","getId","networkId","networkData","networks","decentragram","Contract","abi","address","methods","imageCount","call","imagesCount","loading","props","captureFile","event","preventDefault","file","target","files","reader","FileReader","readAsArrayBuffer","onloadend","buffer","Buffer","result","state","uploadImage","description","add","error","hash","send","from","on","images"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Web3 from 'web3';\r\nimport Identicon from 'identicon.js';\r\nimport './App.css';\r\nimport Decentragram from '../abis/Decentragram.json'\r\nimport Navbar from './Navbar'\r\nimport Main from './Main'\r\n\r\nconst ipfsClient = require('ipfs-http-client')\r\nconst ipfs = ipfsClient({ host: 'ipfs.infura.io', port: 5001, protocol: 'https' }) // leaving out the arguments will default to these values\r\n\r\n\r\n\r\nclass App extends Component {\r\n  async componentWillMount(){\r\n    await this.loadWeb3()\r\n    await this.loadBlockchainData()\r\n  }\r\n  async loadWeb3() {\r\n    if (window.ethereum) {\r\n    window.web3 = new Web3(window.ethereum)\r\n    await window.ethereum.enable()\r\n    }\r\n    else if (window.web3) {\r\n    window.web3 = new Web3(window.web3.currentProvider)\r\n    }\r\n    else {\r\n    window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')}\r\n  }\r\n  async loadBlockchainData(){\r\n    const web3 = window.web3\r\n    const accounts =  await web3.eth.getAccounts()\r\n    console.log(accounts)\r\n    this.setState({ account: accounts[0] });\r\n    // Network ID\r\n    const networkId = await web3.eth.net.getId()\r\n    const networkData = Decentragram.networks[networkId]\r\n    if(networkData){\r\n      const decentragram = new web3.eth.Contract(Decentragram.abi, networkData.address)\r\n      this.setState({ decentragram })\r\n      const imagesCount = await decentragram.methods.imageCount().call()\r\n      this.setState({ imagesCount })\r\n      this.setState({ loading: false})\r\n  } else {\r\n    window.alert('Decentragram contract not deployed to detected network.')\r\n  }\r\n} \r\n  captureFile = event => {\r\n    event.preventDefault()\r\n    const file =  event.target.files[0]\r\n    const reader = new window.FileReader()\r\n    reader.readAsArrayBuffer(file)\r\n    reader.onloadend = () => { \r\n      this.setState({ buffer: Buffer(reader.result) })\r\n      console.log('buffer', this.state.buffer)\r\n  }\r\n}\r\nuploadImage = description => {\r\n  console.log(\"Submitting file to ipfs...\")\r\n  //adding file to the IPFS\r\n  ipfs.add(this.state.buffer, (error, result) => {\r\n  console.log('Ipfs result', result)\r\n  if(error) {\r\n    console.error(error)\r\n    return\r\n  }\r\n   this.setState({ loading: true })\r\n   this.state.decentragram.methods.uploadImage(result[0].hash, description).send({ from: this.state.account }).on('transactionHash', (hash) =>{ \r\n   this.setState({ loading: false })\r\n   window.alert(\"Successfully uploaded\")\r\n  })\r\n  })\r\n}\r\n\r\n    \r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      account: '',\r\n      decentragram: null,\r\n      images: [],\r\n      loading: true\r\n\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar account={this.state.account} />\r\n        { this.state.loading\r\n          ? <div id=\"loader\" className=\"text-center mt-5\"><p>Loading...</p></div>\r\n          : <Main\r\n            captureFile = { this.captureFile }\r\n            uploadImage = { this.uploadImage }\r\n            />\r\n          }\r\n  \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}